1.  同步VS异步
    e.g. AJAX
    - 浏览器的JS实在单线程中执行的（Web worker提供了多线程支持）
    - M+N vs. max(M,N)
2.  常见的异步机制：信号，消息（事件), 回调等。
3.  异步I/O
    - node是首个将异步作为主要的设计方式和设计理念的平台
    - IO类型：CPU一级缓存，CPU二级缓存，内存, 硬盘, 网络
    - 多线程的问题(线程的开销,上下文切换,锁,同步)
    - I/O与CPU可同步进行， 异步I/O的提出是希望I/O调用不会阻塞后续的计算，等待I/O的时间分配给其他业务。
    - 异步/同步 与 阻塞/非阻塞是两回事，从OS的角度讲只有阻塞和非阻塞两种I/O.
    - 说node是单线程是指执行javascript的线程，I/O是多线程的，这部分由系统内核管理。
4.  Node中异步
    - 事件循环
      - node启动后会进入一个while(true)的时间循环
      - 每一次循环叫一次tick,在每个循环中看是否有事件需要处理，如果有就会执行相关的回调
    - 观察者（其实就是存放I/O事件的队列）
      生产消费者模式
    - 请求对象


